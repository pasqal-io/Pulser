{
  "$ref": "#/definitions/PulserSequence",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Atom": {
      "additionalProperties": false,
      "properties": {
        "x": {
          "description": "x-position in µm",
          "type": "number"
        },
        "y": {
          "description": "y-position in µm",
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "type": "object"
    },
    "BlackmanWaveform": {
      "additionalProperties": false,
      "description": "A Blackman window of a specified duration and area.",
      "properties": {
        "area": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The integral of the waveform. Can be negative, in which case it takes the positive waveform and changes the sign of all its values."
        },
        "duration": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The waveform duration (in ns)."
        },
        "kind": {
          "const": "blackman",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "duration",
        "area"
      ],
      "type": "object"
    },
    "Channel": {
      "anyOf": [
        {
          "additionalProperties": false,
          "properties": {
            "hardware_channel": {
              "enum": [
                "raman_local",
                "rydberg_local"
              ],
              "type": "string"
            },
            "initial_target": {
              "$ref": "#/definitions/ParametrizedAtom"
            }
          },
          "required": [
            "hardware_channel",
            "initial_target"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "hardware_channel": {
              "const": "rydberg_global",
              "type": "string"
            }
          },
          "required": [
            "hardware_channel"
          ],
          "type": "object"
        }
      ],
      "description": "Channel declaration. Corresponds to specific hardware channel and possibly points to a target atom."
    },
    "CompositeWaveform": {
      "additionalProperties": false,
      "properties": {
        "kind": {
          "const": "composite",
          "type": "string"
        },
        "waveforms": {
          "description": "List of waveforms to compose one after another, in specified order.",
          "items": {
            "$ref": "#/definitions/Waveform"
          },
          "type": "array"
        }
      },
      "required": [
        "kind",
        "waveforms"
      ],
      "type": "object"
    },
    "ConstantWaveform": {
      "additionalProperties": false,
      "description": "A waveform of constant value.",
      "properties": {
        "duration": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The waveform duration (in ns)."
        },
        "kind": {
          "const": "constant",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The constant modulation value (in rad/µs)."
        }
      },
      "required": [
        "kind",
        "duration",
        "value"
      ],
      "type": "object"
    },
    "CustomWaveform": {
      "additionalProperties": false,
      "properties": {
        "kind": {
          "const": "custom",
          "type": "string"
        },
        "samples": {
          "description": "List of waveform value samples, one per timestep.",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "kind",
        "samples"
      ],
      "type": "object"
    },
    "ExprArgument": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "#/definitions/Parametrized"
        },
        {
          "$ref": "#/definitions/ExprBinary"
        },
        {
          "$ref": "#/definitions/ExprUnary"
        }
      ],
      "description": "Expression argument"
    },
    "ExprBinary": {
      "additionalProperties": false,
      "description": "Simple arithmetic binary expression involving variables and constants.",
      "properties": {
        "expression": {
          "description": "Expresion operation",
          "enum": [
            "add",
            "sub",
            "mul",
            "div"
          ],
          "type": "string"
        },
        "lhs": {
          "$ref": "#/definitions/ExprArgument",
          "description": "Left-hand side of an operation"
        },
        "rhs": {
          "$ref": "#/definitions/ExprArgument",
          "description": "Right-hand side of an operation"
        },
        "type": {
          "description": "Expression return type",
          "enum": [
            "int",
            "float"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "expression",
        "lhs",
        "rhs"
      ],
      "type": "object"
    },
    "ExprUnary": {
      "additionalProperties": false,
      "description": "Simple arithmetic binary expression involving variables and constants.",
      "properties": {
        "expression": {
          "const": "neg",
          "description": "Expresion operation",
          "type": "string"
        },
        "lhs": {
          "$ref": "#/definitions/ExprArgument",
          "description": "Argument of an unary operation"
        },
        "type": {
          "enum": [
            "int",
            "float"
          ],
          "type": "string"
        }
      },
      "required": [
        "type",
        "expression",
        "lhs"
      ],
      "type": "object"
    },
    "InterpolatedWaveform": {
      "additionalProperties": false,
      "description": "Creates a waveform from interpolation of a set of data points.",
      "properties": {
        "duration": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The waveform duration (in ns)."
        },
        "interpolator": {
          "description": "The interpolator type to use",
          "enum": [
            "pchip",
            "interp1d"
          ],
          "type": "string"
        },
        "kind": {
          "const": "interpolated",
          "type": "string"
        },
        "times": {
          "$ref": "#/definitions/ParametrizedNumArray",
          "description": "Fractions of the total duration (between 0 and 1), indicating where to place each value on the time axis. If not given, the values are spread evenly throughout the full duration of the waveform."
        },
        "values": {
          "$ref": "#/definitions/ParametrizedNumArray",
          "description": "Values of the interpolation points (in rad/µs)."
        }
      },
      "required": [
        "kind",
        "duration",
        "values",
        "interpolator"
      ],
      "type": "object"
    },
    "KaiserWavewform": {
      "additionalProperties": false,
      "description": "A Kaiser window of a specified duration and beta parameter.",
      "properties": {
        "area": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The integral of the waveform. Can be negative, in which case it takes the positive waveform and changes the sign of all its values."
        },
        "beta": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The beta parameter of the Kaiser window. A typical value is 14."
        },
        "duration": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The waveform duration (in ns)."
        },
        "kind": {
          "const": "kaiser",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "duration",
        "area",
        "beta"
      ],
      "type": "object"
    },
    "OpAlign": {
      "additionalProperties": false,
      "description": "Aligns multiple channels in time.\n\nIntroduces delays that align the provided channels with the one that finished the latest, such that the next action added to any of them will start right after the latest channel has finished.",
      "properties": {
        "channels": {
          "items": {
            "$ref": "#/definitions/ParametrizedChannel"
          },
          "type": "array"
        },
        "op": {
          "const": "align",
          "type": "string"
        }
      },
      "required": [
        "op",
        "channels"
      ],
      "type": "object"
    },
    "OpDelay": {
      "additionalProperties": false,
      "description": "Adds extra fixed delay before starting the pulse.",
      "properties": {
        "channel": {
          "$ref": "#/definitions/ParametrizedChannel",
          "description": "Channel on which to insert a delay"
        },
        "op": {
          "const": "delay",
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "Delay time"
        }
      },
      "required": [
        "op",
        "channel",
        "time"
      ],
      "type": "object"
    },
    "OpPulse": {
      "additionalProperties": false,
      "description": "Pulse is a modulation of a frequency signal in amplitude and/or frequency, with a specific phase, over a given duration.\n\nNote:     We define the ``amplitude`` of a pulse to be its Rabi frequency, `ω`, in rad/µs.     Equivalently, the ``detuning`` is `Δ`, also in rad/µs.",
      "properties": {
        "amplitude": {
          "$ref": "#/definitions/Waveform",
          "description": "Pulse amplitude waveform (in rad/µs)"
        },
        "channel": {
          "$ref": "#/definitions/ParametrizedChannel",
          "description": "Device channel to use for this pulse."
        },
        "detuning": {
          "$ref": "#/definitions/Waveform",
          "description": "Shift in frequency from the channel's central frequency over time"
        },
        "op": {
          "const": "pulse",
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The pulse phase (in radians)"
        },
        "post_phase_shift": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "A phase shift (in radianss) immediately after the end of the pulse"
        },
        "protocol": {
          "description": "Stipulates how to deal with eventual conflicts with other channels, specifically in terms of having multiple channels act on the same target simultaneously.\n\n- ``'min-delay'``: Before adding the pulse, introduces the   smallest possible delay that avoids all exisiting conflicts.\n\n- ``'no-delay'``: Adds the pulse to the channel, regardless of   existing conflicts.\n\n- ``'wait-for-all'``: Before adding the pulse, adds a delay   that idles the channel until the end of the other channels'   latest pulse.",
          "enum": [
            "min-delay",
            "no-delay",
            "wait-for-all"
          ],
          "type": "string"
        }
      },
      "required": [
        "op",
        "protocol",
        "channel",
        "amplitude",
        "detuning",
        "phase",
        "post_phase_shift"
      ],
      "type": "object"
    },
    "OpTarget": {
      "additionalProperties": false,
      "properties": {
        "channel": {
          "$ref": "#/definitions/ParametrizedChannel",
          "description": "Channel to retarget. Must be local"
        },
        "op": {
          "const": "target",
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/ParametrizedAtom",
          "description": "New target atom"
        }
      },
      "required": [
        "op",
        "channel",
        "target"
      ],
      "type": "object"
    },
    "Operation": {
      "anyOf": [
        {
          "$ref": "#/definitions/OpAlign"
        },
        {
          "$ref": "#/definitions/OpDelay"
        },
        {
          "$ref": "#/definitions/OpTarget"
        },
        {
          "$ref": "#/definitions/OpPulse"
        }
      ],
      "description": "Sequence operation. All operations are performed in specified order."
    },
    "Parameter": {
      "anyOf": [
        {
          "$ref": "#/definitions/VariableNum"
        },
        {
          "$ref": "#/definitions/VariableNumArray"
        },
        {
          "$ref": "#/definitions/VariableStr"
        },
        {
          "$ref": "#/definitions/ExprBinary"
        },
        {
          "$ref": "#/definitions/ExprUnary"
        }
      ],
      "description": "Parameter representing a typed value assigned during sequence build. Parameters can be used in expressions and parametrized values."
    },
    "Parametrized": {
      "additionalProperties": false,
      "description": "Usage of a parameter. References either a variable or an expression by name.",
      "properties": {
        "parameter": {
          "description": "parameter name, must reference declared parameter",
          "type": "string"
        }
      },
      "required": [
        "parameter"
      ],
      "type": "object"
    },
    "ParametrizedAtom": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/Parametrized"
        }
      ],
      "description": "Atom name that can be parametrized. Must reference declared atom in a register."
    },
    "ParametrizedChannel": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/Parametrized"
        }
      ],
      "description": "Channel name that can be parametrized. Must reference declared channel name."
    },
    "ParametrizedNum": {
      "anyOf": [
        {
          "type": "number"
        },
        {
          "$ref": "#/definitions/Parametrized"
        }
      ],
      "description": "Numeric value that can be parametrized"
    },
    "ParametrizedNumArray": {
      "anyOf": [
        {
          "items": {
            "type": "number"
          },
          "type": "array"
        },
        {
          "$ref": "#/definitions/Parametrized"
        }
      ],
      "description": "Numeric array value that can be parametrized"
    },
    "PulserSequence": {
      "additionalProperties": false,
      "description": "Pulser import/export data structure.",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "channels": {
          "additionalProperties": {
            "$ref": "#/definitions/Channel"
          },
          "description": "Channels declared in this Sequence.",
          "type": "object"
        },
        "device": {
          "const": "Chadoq2",
          "description": "A valid device in which to execute the Sequence",
          "type": "string"
        },
        "measurement": {
          "anyOf": [
            {
              "const": "ground-rydberg",
              "type": "string"
            },
            {
              "const": "digital",
              "type": "string"
            },
            {
              "$ref": "#/definitions/Parametrized"
            }
          ],
          "description": "Type of measurement to perform after all pulses are executed"
        },
        "operations": {
          "description": "Sequence of pulses, delays and target changes, performed in specified order.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        },
        "parameters": {
          "additionalProperties": {
            "$ref": "#/definitions/Parameter"
          },
          "description": "Variables and expressions that can be used in expressions or parametrized values.",
          "type": "object"
        },
        "register": {
          "additionalProperties": {
            "$ref": "#/definitions/Atom"
          },
          "description": "A 2D quantum register containing a set of atoms.",
          "type": "object"
        },
        "version": {
          "const": "1",
          "type": "string"
        }
      },
      "required": [
        "version",
        "device",
        "register",
        "channels",
        "parameters",
        "operations",
        "measurement"
      ],
      "type": "object"
    },
    "RampWaveform": {
      "additionalProperties": false,
      "description": "A linear ramp waveform.",
      "properties": {
        "duration": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The waveform duration (in ns)."
        },
        "kind": {
          "const": "ramp",
          "type": "string"
        },
        "start": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The initial value (in rad/µs)."
        },
        "stop": {
          "$ref": "#/definitions/ParametrizedNum",
          "description": "The final value (in rad/µs)."
        }
      },
      "required": [
        "kind",
        "duration",
        "start",
        "stop"
      ],
      "type": "object"
    },
    "VariableNum": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Variable type",
          "enum": [
            "int",
            "float"
          ],
          "type": "string"
        },
        "value": {
          "description": "Default variable value.",
          "type": "number"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "type": "object"
    },
    "VariableNumArray": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Variable type",
          "enum": [
            "intarray",
            "floatarray"
          ],
          "type": "string"
        },
        "value": {
          "description": "Default variable value.",
          "items": {
            "type": "number"
          },
          "type": "array"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "type": "object"
    },
    "VariableStr": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "const": "str",
          "description": "Variable type",
          "type": "string"
        },
        "value": {
          "description": "Default variable value.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "type": "object"
    },
    "Waveform": {
      "anyOf": [
        {
          "$ref": "#/definitions/CompositeWaveform"
        },
        {
          "$ref": "#/definitions/CustomWaveform"
        },
        {
          "$ref": "#/definitions/ConstantWaveform"
        },
        {
          "$ref": "#/definitions/RampWaveform"
        },
        {
          "$ref": "#/definitions/BlackmanWaveform"
        },
        {
          "$ref": "#/definitions/InterpolatedWaveform"
        },
        {
          "$ref": "#/definitions/KaiserWavewform"
        }
      ],
      "description": "Modulation waveform of any kind"
    }
  }
}
